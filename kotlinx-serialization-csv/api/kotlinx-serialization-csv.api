public final class app/softwork/serialization/csv/CSVConfiguration {
	public final fun getAlwaysEmitQuotes ()Z
	public final fun getIncludeHeader ()Z
	public final fun getLineSeparator ()Ljava/lang/String;
	public final fun getNumberFormat ()Lapp/softwork/serialization/csv/CSVFormat$NumberFormat;
	public final fun getSeparator ()Ljava/lang/String;
	public final fun getSerializersModule ()Lkotlinx/serialization/modules/SerializersModule;
}

public final class app/softwork/serialization/csv/CSVConfiguration$Builder {
	public fun <init> ()V
	public final fun getAlwaysEmitQuotes ()Z
	public final fun getIncludeHeader ()Z
	public final fun getLineSeparator ()Ljava/lang/String;
	public final fun getNumberFormat ()Lapp/softwork/serialization/csv/CSVFormat$NumberFormat;
	public final fun getSeparator ()Ljava/lang/String;
	public final fun getSerializersModule ()Lkotlinx/serialization/modules/SerializersModule;
	public final fun setAlwaysEmitQuotes (Z)V
	public final fun setIncludeHeader (Z)V
	public final fun setLineSeparator (Ljava/lang/String;)V
	public final fun setNumberFormat (Lapp/softwork/serialization/csv/CSVFormat$NumberFormat;)V
	public final fun setSeparator (Ljava/lang/String;)V
	public final fun setSerializersModule (Lkotlinx/serialization/modules/SerializersModule;)V
}

public abstract interface class app/softwork/serialization/csv/CSVDecoder : kotlinx/serialization/encoding/CompositeDecoder, kotlinx/serialization/encoding/Decoder {
	public abstract fun getConfiguration ()Lapp/softwork/serialization/csv/CSVConfiguration;
}

public abstract interface class app/softwork/serialization/csv/CSVEncoder : kotlinx/serialization/encoding/CompositeEncoder, kotlinx/serialization/encoding/Encoder {
	public abstract fun getConfiguration ()Lapp/softwork/serialization/csv/CSVConfiguration;
}

public abstract class app/softwork/serialization/csv/CSVFormat : kotlinx/serialization/StringFormat {
	public static final field Default Lapp/softwork/serialization/csv/CSVFormat$Default;
	public synthetic fun <init> (Lapp/softwork/serialization/csv/CSVConfiguration;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun decodeFromString (Lkotlinx/serialization/DeserializationStrategy;Ljava/lang/String;)Ljava/lang/Object;
	public fun encodeToString (Lkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)Ljava/lang/String;
	public final fun getConfiguration ()Lapp/softwork/serialization/csv/CSVConfiguration;
	public fun getSerializersModule ()Lkotlinx/serialization/modules/SerializersModule;
}

public final class app/softwork/serialization/csv/CSVFormat$Default : app/softwork/serialization/csv/CSVFormat {
	public final fun invoke (Lkotlin/jvm/functions/Function1;)Lapp/softwork/serialization/csv/CSVFormat;
}

public final class app/softwork/serialization/csv/CSVFormat$NumberFormat : java/lang/Enum {
	public static final field Comma Lapp/softwork/serialization/csv/CSVFormat$NumberFormat;
	public static final field Dot Lapp/softwork/serialization/csv/CSVFormat$NumberFormat;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lapp/softwork/serialization/csv/CSVFormat$NumberFormat;
	public static fun values ()[Lapp/softwork/serialization/csv/CSVFormat$NumberFormat;
}

