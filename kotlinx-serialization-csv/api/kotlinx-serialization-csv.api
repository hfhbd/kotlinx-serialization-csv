public final class app/softwork/serialization/csv/CSVConfiguration {
	public final fun getAlwaysEmitQuotes ()Z
	public final fun getIncludeHeader ()Z
	public final fun getLineSeparator ()Ljava/lang/String;
	public final fun getNumberFormat ()Lapp/softwork/serialization/csv/CSVFormat$NumberFormat;
	public final fun getSeparator ()Ljava/lang/String;
	public final fun getSerializersModule ()Lkotlinx/serialization/modules/SerializersModule;
}

public final class app/softwork/serialization/csv/CSVConfiguration$Builder {
	public fun <init> ()V
	public final fun getAlwaysEmitQuotes ()Z
	public final fun getIncludeHeader ()Z
	public final fun getLineSeparator ()Ljava/lang/String;
	public final fun getNumberFormat ()Lapp/softwork/serialization/csv/CSVFormat$NumberFormat;
	public final fun getSeparator ()Ljava/lang/String;
	public final fun getSerializersModule ()Lkotlinx/serialization/modules/SerializersModule;
	public final fun setAlwaysEmitQuotes (Z)V
	public final fun setIncludeHeader (Z)V
	public final fun setLineSeparator (Ljava/lang/String;)V
	public final fun setNumberFormat (Lapp/softwork/serialization/csv/CSVFormat$NumberFormat;)V
	public final fun setSeparator (Ljava/lang/String;)V
	public final fun setSerializersModule (Lkotlinx/serialization/modules/SerializersModule;)V
}

public final class app/softwork/serialization/csv/CSVDecoder : kotlinx/serialization/encoding/AbstractDecoder {
	public fun beginStructure (Lkotlinx/serialization/descriptors/SerialDescriptor;)Lapp/softwork/serialization/csv/CSVDecoder;
	public synthetic fun beginStructure (Lkotlinx/serialization/descriptors/SerialDescriptor;)Lkotlinx/serialization/encoding/CompositeDecoder;
	public fun decodeBoolean ()Z
	public fun decodeByte ()B
	public fun decodeChar ()C
	public fun decodeCollectionSize (Lkotlinx/serialization/descriptors/SerialDescriptor;)I
	public fun decodeDouble ()D
	public fun decodeElementIndex (Lkotlinx/serialization/descriptors/SerialDescriptor;)I
	public fun decodeEnum (Lkotlinx/serialization/descriptors/SerialDescriptor;)I
	public fun decodeFloat ()F
	public fun decodeInt ()I
	public fun decodeLong ()J
	public fun decodeNotNullMark ()Z
	public fun decodeNull ()Ljava/lang/Void;
	public fun decodeSequentially ()Z
	public fun decodeShort ()S
	public fun decodeString ()Ljava/lang/String;
	public fun endStructure (Lkotlinx/serialization/descriptors/SerialDescriptor;)V
	public final fun getConfiguration ()Lapp/softwork/serialization/csv/CSVConfiguration;
	public fun getSerializersModule ()Lkotlinx/serialization/modules/SerializersModule;
}

public final class app/softwork/serialization/csv/CSVEncoder : kotlinx/serialization/encoding/AbstractEncoder {
	public fun beginCollection (Lkotlinx/serialization/descriptors/SerialDescriptor;I)Lkotlinx/serialization/encoding/CompositeEncoder;
	public fun beginStructure (Lkotlinx/serialization/descriptors/SerialDescriptor;)Lkotlinx/serialization/encoding/CompositeEncoder;
	public fun encodeDouble (D)V
	public fun encodeEnum (Lkotlinx/serialization/descriptors/SerialDescriptor;I)V
	public fun encodeFloat (F)V
	public fun encodeInline (Lkotlinx/serialization/descriptors/SerialDescriptor;)Lkotlinx/serialization/encoding/Encoder;
	public fun encodeNull ()V
	public fun encodeValue (Ljava/lang/Object;)V
	public fun endStructure (Lkotlinx/serialization/descriptors/SerialDescriptor;)V
	public final fun getConfiguration ()Lapp/softwork/serialization/csv/CSVConfiguration;
	public fun getSerializersModule ()Lkotlinx/serialization/modules/SerializersModule;
}

public abstract class app/softwork/serialization/csv/CSVFormat : kotlinx/serialization/StringFormat {
	public static final field Default Lapp/softwork/serialization/csv/CSVFormat$Default;
	public synthetic fun <init> (Lapp/softwork/serialization/csv/CSVConfiguration;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun decodeFromString (Lkotlinx/serialization/DeserializationStrategy;Ljava/lang/String;)Ljava/lang/Object;
	public fun encodeToString (Lkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)Ljava/lang/String;
	public final fun getConfiguration ()Lapp/softwork/serialization/csv/CSVConfiguration;
	public fun getSerializersModule ()Lkotlinx/serialization/modules/SerializersModule;
}

public final class app/softwork/serialization/csv/CSVFormat$Default : app/softwork/serialization/csv/CSVFormat {
	public final fun invoke (Lkotlin/jvm/functions/Function1;)Lapp/softwork/serialization/csv/CSVFormat;
}

public final class app/softwork/serialization/csv/CSVFormat$NumberFormat : java/lang/Enum {
	public static final field Comma Lapp/softwork/serialization/csv/CSVFormat$NumberFormat;
	public static final field Dot Lapp/softwork/serialization/csv/CSVFormat$NumberFormat;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lapp/softwork/serialization/csv/CSVFormat$NumberFormat;
	public static fun values ()[Lapp/softwork/serialization/csv/CSVFormat$NumberFormat;
}

