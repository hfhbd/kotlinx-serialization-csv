<?xml version='1.0' encoding='UTF-8'?>
<SmellBaseline>
  <ManuallySuppressedIssues/>
  <CurrentIssues>
    <ID>CyclomaticComplexMethod:Ebcdic.kt$internal fun String.toSignedEBCDICZonedDecimal(positive: Boolean): String</ID>
    <ID>CyclomaticComplexMethod:Ebcdic.kt$private fun CharSequence.fromSignedEBCDICZonedDecimal(): Long</ID>
    <ID>LongParameterList:CSVFormat.kt$CSVFormat.Default$( separator: String = ",", lineSeparator: String = "\n", serializersModule: SerializersModule = EmptySerializersModule(), includeHeader: Boolean = true, alwaysEmitQuotes: Boolean = false, numberFormat: NumberFormat = NumberFormat.Dot, )</ID>
    <ID>MagicNumber:Ebcdic.kt$10</ID>
    <ID>MagicNumber:Ebcdic.kt$3</ID>
    <ID>MagicNumber:Ebcdic.kt$4</ID>
    <ID>MagicNumber:Ebcdic.kt$5</ID>
    <ID>MagicNumber:Ebcdic.kt$6</ID>
    <ID>MagicNumber:Ebcdic.kt$7</ID>
    <ID>MagicNumber:Ebcdic.kt$8</ID>
    <ID>MagicNumber:Ebcdic.kt$9</ID>
    <ID>MaxLineLength:CsvEncoderTest.kt$CsvEncoderTest$expected = "bar;foo;enum;instant\r\n;42,0;Three;1970-01-01T00:00:00Z\r\nSomething;42,0;Three;1970-01-01T00:00:01Z\r\n;42,0;Three;1970-01-01T00:00:02Z"</ID>
    <ID>MaximumLineLength:CsvEncoderTest.kt$CsvEncoderTest$ </ID>
    <ID>NestedBlockDepth:FixedLengthDecoder.kt$FixedLengthDecoder$@ExperimentalSerializationApi internal fun SerialDescriptor.hasInnerListLengthIndex(): Int?</ID>
    <ID>TooManyFunctions:CSVDecoder.kt$CSVDecoder : AbstractDecoder</ID>
    <ID>TooManyFunctions:FixedLengthDecoder.kt$FixedLengthDecoder : FailingPrimitiveDecoderCompositeDecoder</ID>
    <ID>TooManyFunctions:FixedLengthEncoder.kt$FixedLengthEncoder : FailingPrimitiveEncoderCompositeEncoder</ID>
    <ID>TooManyFunctions:FixedLengthPrimitiveDecoder.kt$FixedLengthPrimitiveDecoder : Decoder</ID>
    <ID>TooManyFunctions:FixedLengthPrimitiveEncoder.kt$FixedLengthPrimitiveEncoder : Encoder</ID>
  </CurrentIssues>
</SmellBaseline>
